#!/usr/bin/env ruby

require 'trex'
require 'grio/dsl'

raise unless account=Trex.env[:account]

if ARGV.index("--open")
  account.orders.each do |o|
   puts o.pp
  end
  exit
end

ARGV.find do |a| break if a=~/\-\-cancel\=(.*)/ end
if uuid = $1
  if uuid == "all"
    account.orders.each do |o|
      o.cancel
    end
    
    exit
  end
  account.cancel uuid
  exit
end

ARGV.find do |a| break if a=~/\-\-status\=(.*)/ end
if uuid = $1
  puts Trex::Order.get(account, uuid).pp
  exit
end


ARGV.find do |a| break if a=~/\-\-market\=(.*)/ end
if market = $1
  base,coin = account.balance(market.split("-")[0]), account.balance(market.split("-")[1])
  
  ARGV.find do |a| break if a=~/\-\-rate\=(.*)/ end
  rate = $1
  
  ARGV.find do |a| break if a=~/\-\-amount\=(.*)/ end
  amt = $1  
  
  raise unless rate
  raise unless amt
  

  
  if ["last","ask","bid"].index(rate)
    tick = Trex.ticker market
    rate = tick.send(rate.to_sym)
  elsif rate == "diff"
    tick = Trex.ticker market
    rate = (tick.ask + tick.bid) / 2
  else
    rate = rate.to_f
  end  

  if ARGV.index "--sell"
    if amt == "all" or amt == "-1"
      amt = coin.avail
    elsif amt =~ /\-([0-9]+)\.([0-9]+)/
      amt = coin.avail * ("#{$1}.#{$2}").to_f
    else
      amt=amt.to_f
    end
  
    uuid = account.sell market, amt, rate
    puts uuid.to_json    
  elsif ARGV.index "--buy"
    if amt == "all" or amt == "-1"
      amt = base.avail
    elsif amt =~ /\-([0-9]+)\.([0-9]+)/
      amt = base.avail * ("#{$1}.#{$2}").to_f
    else
      amt=amt.to_f
    end
  
    uuid = account.buy market, amt, rate
    puts uuid.to_json
  end
end
